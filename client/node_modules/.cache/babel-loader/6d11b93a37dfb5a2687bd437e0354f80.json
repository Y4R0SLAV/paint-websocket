{"ast":null,"code":"// сделать ТИП ДЛЯ КАНВАСА! В СТАТЕ И В СЕТ КАНВАС АКТИОНЕ + В АКТИОН КРЕАТОРЕ КАНВАС\n\nexport let CanvasActionTypes;\n(function (CanvasActionTypes) {\n  CanvasActionTypes[\"SET_CANVAS\"] = \"SET_CANVAS\";\n  CanvasActionTypes[\"PUSH_TO_UNDO\"] = \"PUSH_TO_UNDO\";\n  CanvasActionTypes[\"PUSH_TO_REDO\"] = \"PUSH_TO_REDO\";\n  CanvasActionTypes[\"UNDO\"] = \"UNDO\";\n  CanvasActionTypes[\"REDO\"] = \"REDO\";\n})(CanvasActionTypes || (CanvasActionTypes = {}));","map":{"version":3,"names":["CanvasActionTypes"],"sources":["D:/projects/websoket-paint/src/types/canvas.ts"],"sourcesContent":["export interface CanvasState {\r\n  canvas: HTMLCanvasElement | null\r\n  undoList: string[]\r\n  redoList: string[]\r\n}\r\n\r\n// сделать ТИП ДЛЯ КАНВАСА! В СТАТЕ И В СЕТ КАНВАС АКТИОНЕ + В АКТИОН КРЕАТОРЕ КАНВАС\r\n\r\nexport enum CanvasActionTypes {\r\n  SET_CANVAS = \"SET_CANVAS\",\r\n  PUSH_TO_UNDO = \"PUSH_TO_UNDO\",\r\n  PUSH_TO_REDO = \"PUSH_TO_REDO\",\r\n  UNDO = \"UNDO\",\r\n  REDO = \"REDO\" \r\n}\r\n\r\ninterface SetCanvasAction {\r\n  type: CanvasActionTypes.SET_CANVAS,\r\n  payload: HTMLCanvasElement | null\r\n}\r\n\r\ninterface PushToUndoAction {\r\n  type: CanvasActionTypes.PUSH_TO_UNDO\r\n  payload: string\r\n}\r\n\r\ninterface PushToRedoAction {\r\n  type: CanvasActionTypes.PUSH_TO_UNDO\r\n  payload: string\r\n}\r\n\r\ninterface UndoAction {\r\n  type: CanvasActionTypes.UNDO\r\n}\r\n\r\ninterface RedoAction {\r\n  type: CanvasActionTypes.REDO\r\n}\r\n\r\n\r\nexport type CanvasAction =  SetCanvasAction \r\n                            | PushToUndoAction\r\n                            | PushToRedoAction\r\n                            | UndoAction\r\n                            | RedoAction"],"mappings":"AAMA;;AAEA,WAAYA,iBAAiB;AAM5B,WANWA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;AAAA,GAAjBA,iBAAiB,KAAjBA,iBAAiB"},"metadata":{},"sourceType":"module"}