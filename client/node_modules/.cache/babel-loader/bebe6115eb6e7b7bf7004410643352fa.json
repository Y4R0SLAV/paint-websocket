{"ast":null,"code":"import Tool from './tool';\nexport default class Rect extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.mouseDown = false;\n    this.startX = -1000;\n    this.startY = -1000;\n    this.saved = \"\";\n    this.width = 0;\n    this.height = 0;\n    this.listen();\n  }\n  listen() {\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n  }\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: \"draw\",\n      id: this.id,\n      figure: {\n        type: \"rect\",\n        x: this.startX,\n        y: this.startY,\n        width: this.width,\n        height: this.height,\n        color: this.ctx.fillStyle\n      }\n    }));\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    const rect = this.canvas.getBoundingClientRect();\n    this.startX = e.clientX - rect.left;\n    this.startY = e.clientY - rect.top;\n    this.saved = this.canvas.toDataURL();\n  }\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      const rect = this.canvas.getBoundingClientRect();\n      let currentX = e.clientX - rect.left;\n      let currentY = e.clientY - rect.top;\n      this.width = currentX - this.startX;\n      this.height = currentY - this.startY;\n      this.draw(this.startX, this.startY, this.width, this.height);\n    }\n  }\n  draw(x, y, w, h) {\n    const img = new Image();\n    img.src = this.saved;\n    img.onload = () => {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.rect(x, y, w, h);\n      this.ctx.fill();\n      this.ctx.stroke();\n    };\n  }\n  static staticDraw(ctx, x, y, w, h, color) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(x, y, w, h);\n    ctx.fill();\n    ctx.stroke();\n  }\n}","map":{"version":3,"names":["Tool","Rect","constructor","canvas","socket","id","mouseDown","startX","startY","saved","width","height","listen","onmousemove","mouseMoveHandler","bind","onmousedown","mouseDownHandler","onmouseup","mouseUpHandler","e","send","JSON","stringify","method","figure","type","x","y","color","ctx","fillStyle","beginPath","rect","getBoundingClientRect","clientX","left","clientY","top","toDataURL","currentX","currentY","draw","w","h","img","Image","src","onload","clearRect","drawImage","fill","stroke","staticDraw"],"sources":["D:/projects/websoket-paint/client/src/tools/rect.ts"],"sourcesContent":["import { RectSocketType } from '../types/canvas'\r\nimport Tool from './tool'\r\n\r\nexport default class Rect extends Tool {\r\n  mouseDown = false\r\n  startX = -1000\r\n  startY = -1000\r\n  saved = \"\"\r\n  width = 0\r\n  height = 0\r\n\r\n  constructor(canvas: HTMLCanvasElement, socket: WebSocket, id: string) {\r\n    super(canvas, socket, id)\r\n    this.listen( )\r\n  }\r\n\r\n  listen() {\r\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n  }\r\n\r\n  mouseUpHandler(e: MouseEvent) {\r\n    this.mouseDown = false\r\n    this.socket.send(JSON.stringify({\r\n      method: \"draw\",\r\n      id: this.id,\r\n      figure: {\r\n        type: \"rect\",\r\n        x: this.startX,\r\n        y: this.startY,\r\n        width: this.width,\r\n        height:  this.height,\r\n        color: this.ctx.fillStyle\r\n      } as RectSocketType\r\n    }))\r\n  }\r\n\r\n  mouseDownHandler(e: MouseEvent) {\r\n    this.mouseDown = true\r\n    this.ctx.beginPath()\r\n\r\n    const rect = this.canvas.getBoundingClientRect()\r\n\r\n    this.startX = e.clientX - rect.left\r\n    this.startY = e.clientY - rect.top\r\n\r\n    this.saved = this.canvas.toDataURL()\r\n  }\r\n\r\n  mouseMoveHandler(e: MouseEvent) {\r\n    if (this.mouseDown) {\r\n      const rect = this.canvas.getBoundingClientRect()\r\n\r\n      let currentX = e.clientX - rect.left\r\n      let currentY = e.clientY - rect.top \r\n\r\n      this.width = currentX - this.startX; \r\n      this.height = currentY - this.startY;\r\n\r\n      this.draw(this.startX, this.startY, this.width, this.height)\r\n    }\r\n  }\r\n\r\n  draw(x: number, y: number, w: number, h: number) {\r\n    const img = new Image()\r\n    img.src = this.saved\r\n    img.onload = () => {\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.beginPath()\r\n      this.ctx.rect(x, y, w, h)\r\n      this.ctx.fill()\r\n      this.ctx.stroke()\r\n    }\r\n  }\r\n\r\n  static staticDraw(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number, color: string) {\r\n    ctx.fillStyle = color\r\n    ctx.beginPath()\r\n    ctx.rect(x, y, w, h)\r\n    ctx.fill()\r\n    ctx.stroke()\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}