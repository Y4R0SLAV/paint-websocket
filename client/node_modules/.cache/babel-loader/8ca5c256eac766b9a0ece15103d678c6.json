{"ast":null,"code":"import { CanvasActionTypes } from './../../types/canvas';\nconst initialState = {\n  canvas: null,\n  undoList: [],\n  redoList: []\n};\nexport const canvasReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let canvas = state.canvas;\n  let ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n  let newUndoList = [...state.undoList];\n  let newRedoList = [...state.redoList];\n  switch (action.type) {\n    case CanvasActionTypes.SET_CANVAS:\n      return {\n        ...state,\n        canvas: action.payload\n      };\n    case CanvasActionTypes.PUSH_TO_UNDO:\n      return {\n        ...state,\n        undoList: [...state.undoList, action.payload]\n      };\n    case CanvasActionTypes.PUSH_TO_REDO:\n      return {\n        ...state,\n        undoList: [...state.redoList, action.payload]\n      };\n    case CanvasActionTypes.UNDO:\n      if (state.undoList.length > 0 && canvas) {\n        let dataUrl = newUndoList.pop();\n        newRedoList.push(dataUrl);\n        let img = new Image();\n        img.src = dataUrl;\n        img.onload = () => {\n          ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        };\n      } else {\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      return {\n        ...state,\n        undoList: newUndoList,\n        redoList: newRedoList\n      };\n    case CanvasActionTypes.REDO:\n      if (state.redoList.length > 0) {\n        let dataUrl = newUndoList.pop();\n        newRedoList.push(dataUrl);\n        let img = new Image();\n        img.src = dataUrl;\n        img.onload = () => {\n          ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        };\n      } else {\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      return {\n        ...state,\n        undoList: newUndoList,\n        redoList: newRedoList\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CanvasActionTypes","initialState","canvas","undoList","redoList","canvasReducer","state","action","ctx","getContext","newUndoList","newRedoList","type","SET_CANVAS","payload","PUSH_TO_UNDO","PUSH_TO_REDO","UNDO","length","dataUrl","pop","push","img","Image","src","onload","clearRect","width","height","drawImage","REDO"],"sources":["D:/projects/websoket-paint/src/store/reducers/canvasReducer.ts"],"sourcesContent":["import { CanvasState, CanvasAction, CanvasActionTypes } from './../../types/canvas'\r\n\r\nconst initialState: CanvasState = {\r\n  canvas: null,\r\n  undoList: [],\r\n  redoList: [],\r\n}\r\n\r\nexport const canvasReducer = (state = initialState, action: CanvasAction): CanvasState => {\r\n  let canvas = state.canvas as HTMLCanvasElement\r\n  let ctx = canvas?.getContext(\"2d\")\r\n  let newUndoList = [...state.undoList]\r\n  let newRedoList = [...state.redoList]\r\n\r\n  switch (action.type) {\r\n    case CanvasActionTypes.SET_CANVAS: \r\n      return {...state, canvas: action.payload}\r\n\r\n    case CanvasActionTypes.PUSH_TO_UNDO: \r\n      return {...state, undoList: [...state.undoList, action.payload]}\r\n\r\n    case CanvasActionTypes.PUSH_TO_REDO: \r\n      return {...state, undoList: [...state.redoList, action.payload]}\r\n\r\n    case CanvasActionTypes.UNDO:      \r\n      if (state.undoList.length > 0 && canvas) {\r\n        let dataUrl = newUndoList.pop() as string\r\n        newRedoList.push(dataUrl)\r\n\r\n        let img = new Image()\r\n        img.src = dataUrl\r\n        img.onload = () => {\r\n          ctx?.clearRect(0, 0, canvas.width, canvas.height)\r\n          ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\r\n        }\r\n\r\n      } else {\r\n        ctx?.clearRect(0, 0, canvas.width, canvas.height)\r\n      }\r\n      return {...state, undoList: newUndoList, redoList: newRedoList}\r\n\r\n    case CanvasActionTypes.REDO:\r\n      if (state.redoList.length > 0) {\r\n        let dataUrl = newUndoList.pop() as string\r\n        newRedoList.push(dataUrl)\r\n\r\n        let img = new Image()\r\n        img.src = dataUrl\r\n        img.onload = () => {\r\n          ctx?.clearRect(0, 0, canvas.width, canvas.height)\r\n          ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\r\n        }\r\n\r\n      } else {\r\n        ctx?.clearRect(0, 0, canvas.width, canvas.height)\r\n      }\r\n      return {...state, undoList: newUndoList, redoList: newRedoList}\r\n\r\n    default:\r\n      return state\r\n  }\r\n} "],"mappings":"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"},"metadata":{},"sourceType":"module"}