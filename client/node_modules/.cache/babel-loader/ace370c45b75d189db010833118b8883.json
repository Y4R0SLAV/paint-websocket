{"ast":null,"code":"import { CanvasActionTypes } from './../../types/canvas';\nconst initialState = {\n  canvas: HTMLCanvasElement | null\n};\nexport const canvasReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CanvasActionTypes.SET_CANVAS:\n      return {\n        ...state,\n        canvas: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CanvasActionTypes","initialState","canvas","HTMLCanvasElement","canvasReducer","state","action","type","SET_CANVAS","payload"],"sources":["D:/projects/websoket-paint/src/store/reducers/canvasReducer.ts"],"sourcesContent":["import { CanvasState, CanvasAction, CanvasActionTypes } from './../../types/canvas'\r\n\r\nconst initialState: CanvasState = {\r\n  canvas: HTMLCanvasElement | null\r\n}\r\n\r\nexport const canvasReducer = (state = initialState, action: CanvasAction): CanvasState => {\r\n  switch (action.type) {\r\n    case CanvasActionTypes.SET_CANVAS: \r\n      return {...state, canvas: action.payload}\r\n\r\n    default:\r\n      return state\r\n  }\r\n} "],"mappings":"AAAA,SAAoCA,iBAAiB,QAAQ,sBAAsB;AAEnF,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAEC,iBAAiB,GAAG;AAC9B,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,YAA6D;EAAA,IAA5DC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAoB;EACtE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,iBAAiB,CAACQ,UAAU;MAC/B,OAAO;QAAC,GAAGH,KAAK;QAAEH,MAAM,EAAEI,MAAM,CAACG;MAAO,CAAC;IAE3C;MACE,OAAOJ,KAAK;EAAA;AAElB,CAAC"},"metadata":{},"sourceType":"module"}