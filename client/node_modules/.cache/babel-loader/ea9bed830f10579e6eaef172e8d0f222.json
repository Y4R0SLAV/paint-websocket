{"ast":null,"code":"import { CanvasActionTypes } from './../../types/canvas';\nconst initialState = {\n  canvas: null,\n  undoList: [],\n  redoList: []\n};\nexport const canvasReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CanvasActionTypes.SET_CANVAS:\n      return {\n        ...state,\n        canvas: action.payload\n      };\n    case CanvasActionTypes.PUSH_TO_UNDO:\n      return {\n        ...state,\n        undoList: [...state.undoList, action.payload]\n      };\n    case CanvasActionTypes.PUSH_TO_REDO:\n      return {\n        ...state,\n        undoList: [...state.redoList, action.payload]\n      };\n    case CanvasActionTypes.UNDO:\n      if (!state.canvas) {\n        return state;\n      }\n      let canvas = state.canvas;\n      let ctx = canvas.getContext(\"2d\");\n      let newUndoList = [...state.undoList];\n      if (state.undoList.length > 0) {\n        let dataUrl = state.undoList.pop();\n        let img = new Image();\n        img.src = dataUrl;\n        img.onload = () => {\n          ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        };\n      } else {\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      return {\n        ...state,\n        undoList: [...state.undoList, action.payload]\n      };\n    case CanvasActionTypes.REDO:\n      return {\n        ...state,\n        undoList: [...state.undoList, action.payload]\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CanvasActionTypes","initialState","canvas","undoList","redoList","canvasReducer","state","action","type","SET_CANVAS","payload","PUSH_TO_UNDO","PUSH_TO_REDO","UNDO","ctx","getContext","newUndoList","length","dataUrl","pop","img","Image","src","onload","clearRect","width","height","drawImage","REDO"],"sources":["D:/projects/websoket-paint/src/store/reducers/canvasReducer.ts"],"sourcesContent":["import { CanvasState, CanvasAction, CanvasActionTypes } from './../../types/canvas'\r\n\r\nconst initialState: CanvasState = {\r\n  canvas: null,\r\n  undoList: [],\r\n  redoList: [],\r\n}\r\n\r\nexport const canvasReducer = (state = initialState, action: CanvasAction): CanvasState => {\r\n  switch (action.type) {\r\n    case CanvasActionTypes.SET_CANVAS: \r\n      return {...state, canvas: action.payload}\r\n\r\n    case CanvasActionTypes.PUSH_TO_UNDO: \r\n      return {...state, undoList: [...state.undoList, action.payload]}\r\n\r\n    case CanvasActionTypes.PUSH_TO_REDO: \r\n      return {...state, undoList: [...state.redoList, action.payload]}\r\n\r\n    case CanvasActionTypes.UNDO:\r\n      if (!state.canvas) {\r\n        return state\r\n      }\r\n\r\n      let canvas = state.canvas\r\n      let ctx = canvas.getContext(\"2d\")\r\n      let newUndoList = [...state.undoList]\r\n\r\n      if (state.undoList.length > 0) {\r\n        let dataUrl = state.undoList.pop() as string\r\n        let img = new Image()\r\n        img.src = dataUrl\r\n        img.onload = () => {\r\n          ctx?.clearRect(0, 0, canvas.width, canvas.height)\r\n          ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\r\n\r\n        }\r\n\r\n      } else {\r\n        ctx?.clearRect(0, 0, canvas.width, canvas.height)\r\n      }\r\n\r\n\r\n\r\n      return {...state, undoList: [...state.undoList, action.payload]}\r\n\r\n    case CanvasActionTypes.REDO: \r\n      return {...state, undoList: [...state.undoList, action.payload]}\r\n\r\n    default:\r\n      return state\r\n  }\r\n} "],"mappings":"AAAA,SAAoCA,iBAAiB,QAAQ,sBAAsB;AAEnF,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,YAA6D;EAAA,IAA5DC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAoB;EACtE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,iBAAiB,CAACS,UAAU;MAC/B,OAAO;QAAC,GAAGH,KAAK;QAAEJ,MAAM,EAAEK,MAAM,CAACG;MAAO,CAAC;IAE3C,KAAKV,iBAAiB,CAACW,YAAY;MACjC,OAAO;QAAC,GAAGL,KAAK;QAAEH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEI,MAAM,CAACG,OAAO;MAAC,CAAC;IAElE,KAAKV,iBAAiB,CAACY,YAAY;MACjC,OAAO;QAAC,GAAGN,KAAK;QAAEH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACF,QAAQ,EAAEG,MAAM,CAACG,OAAO;MAAC,CAAC;IAElE,KAAKV,iBAAiB,CAACa,IAAI;MACzB,IAAI,CAACP,KAAK,CAACJ,MAAM,EAAE;QACjB,OAAOI,KAAK;MACd;MAEA,IAAIJ,MAAM,GAAGI,KAAK,CAACJ,MAAM;MACzB,IAAIY,GAAG,GAAGZ,MAAM,CAACa,UAAU,CAAC,IAAI,CAAC;MACjC,IAAIC,WAAW,GAAG,CAAC,GAAGV,KAAK,CAACH,QAAQ,CAAC;MAErC,IAAIG,KAAK,CAACH,QAAQ,CAACc,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAIC,OAAO,GAAGZ,KAAK,CAACH,QAAQ,CAACgB,GAAG,EAAY;QAC5C,IAAIC,GAAG,GAAG,IAAIC,KAAK,EAAE;QACrBD,GAAG,CAACE,GAAG,GAAGJ,OAAO;QACjBE,GAAG,CAACG,MAAM,GAAG,MAAM;UACjBT,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEtB,MAAM,CAACuB,KAAK,EAAEvB,MAAM,CAACwB,MAAM,CAAC;UACjDZ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEa,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,EAAElB,MAAM,CAACuB,KAAK,EAAEvB,MAAM,CAACwB,MAAM,CAAC;QAExD,CAAC;MAEH,CAAC,MAAM;QACLZ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEtB,MAAM,CAACuB,KAAK,EAAEvB,MAAM,CAACwB,MAAM,CAAC;MACnD;MAIA,OAAO;QAAC,GAAGpB,KAAK;QAAEH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEI,MAAM,CAACG,OAAO;MAAC,CAAC;IAElE,KAAKV,iBAAiB,CAAC4B,IAAI;MACzB,OAAO;QAAC,GAAGtB,KAAK;QAAEH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEI,MAAM,CAACG,OAAO;MAAC,CAAC;IAElE;MACE,OAAOJ,KAAK;EAAA;AAElB,CAAC"},"metadata":{},"sourceType":"module"}