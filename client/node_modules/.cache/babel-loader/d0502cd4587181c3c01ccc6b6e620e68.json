{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\websoket-paint\\\\src\\\\components\\\\ToolBar.tsx\",\n  _s = $RefreshSig$();\nimport \"../styles/toolbar.scss\";\nimport { useActions } from './../hooks/useActions';\nimport { useTypedSelector } from './../hooks/useTypedSelector';\nimport Rect from './../tools/rect';\nimport Brush from \"../tools/brush\";\nimport Circle from './../tools/circle';\nimport Eraser from './../tools/eraser';\nimport Line from './../tools/line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToolBar = () => {\n  _s();\n  const {\n    setTool\n  } = useActions();\n  const canvas = useTypedSelector(state => state.canvas.canvas);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn brush\",\n      onClick: () => {\n        canvas && setTool(new Brush(canvas));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn rect\",\n      onClick: () => {\n        canvas && setTool(new Rect(canvas));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn circle\",\n      onClick: () => {\n        canvas && setTool(new Circle(canvas));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn eraser\",\n      onClick: () => {\n        canvas && setTool(new Eraser(canvas));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn line\",\n      onClick: () => {\n        canvas && setTool(new Line(canvas));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input__color\",\n      type: \"color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_s(ToolBar, \"TejKwd1qaL94CsdNkLpZG+1FBKI=\", false, function () {\n  return [useActions, useTypedSelector];\n});\n_c = ToolBar;\nvar _c;\n$RefreshReg$(_c, \"ToolBar\");","map":{"version":3,"names":["useActions","useTypedSelector","Rect","Brush","Circle","Eraser","Line","ToolBar","setTool","canvas","state"],"sources":["D:/projects/websoket-paint/src/components/ToolBar.tsx"],"sourcesContent":["import \"../styles/toolbar.scss\"\r\nimport { useActions } from './../hooks/useActions'\r\nimport { useTypedSelector } from './../hooks/useTypedSelector'\r\n\r\nimport Rect from './../tools/rect'\r\nimport Brush from \"../tools/brush\"\r\nimport Circle from './../tools/circle'\r\nimport Eraser from './../tools/eraser'\r\nimport Line from './../tools/line'\r\n\r\nexport const ToolBar = () => {\r\n  const {setTool} = useActions()\r\n  const canvas = useTypedSelector(state => state.canvas.canvas)\r\n\r\n  return <div className=\"toolbar\">\r\n    <button className=\"toolbar__btn brush\" onClick={() => {canvas && setTool(new Brush(canvas))}}/>\r\n    <button className=\"toolbar__btn rect\"  onClick={() => {canvas && setTool(new Rect(canvas))}}/>\r\n    <button className=\"toolbar__btn circle\" onClick={() => {canvas && setTool(new Circle(canvas))}}/>\r\n    <button className=\"toolbar__btn eraser\" onClick={() => {canvas && setTool(new Eraser(canvas))}}/>\r\n    <button className=\"toolbar__btn line\" onClick={() => {canvas && setTool(new Line(canvas))}}/>\r\n\r\n    <input className=\"input__color\" type=\"color\" />\r\n\r\n    <button className=\"toolbar__btn undo\"/>\r\n    <button className=\"toolbar__btn redo\"/>\r\n    <button className=\"toolbar__btn save\"/>\r\n\r\n  </div>\r\n}"],"mappings":";;AAAA,OAAO,wBAAwB;AAC/B,SAASA,UAAU,QAAQ,uBAAuB;AAClD,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,iBAAiB;AAAA;AAElC,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAM;IAACC;EAAO,CAAC,GAAGR,UAAU,EAAE;EAC9B,MAAMS,MAAM,GAAGR,gBAAgB,CAACS,KAAK,IAAIA,KAAK,CAACD,MAAM,CAACA,MAAM,CAAC;EAE7D,oBAAO;IAAK,SAAS,EAAC,SAAS;IAAA,wBAC7B;MAAQ,SAAS,EAAC,oBAAoB;MAAC,OAAO,EAAE,MAAM;QAACA,MAAM,IAAID,OAAO,CAAC,IAAIL,KAAK,CAACM,MAAM,CAAC,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/F;MAAQ,SAAS,EAAC,mBAAmB;MAAE,OAAO,EAAE,MAAM;QAACA,MAAM,IAAID,OAAO,CAAC,IAAIN,IAAI,CAACO,MAAM,CAAC,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9F;MAAQ,SAAS,EAAC,qBAAqB;MAAC,OAAO,EAAE,MAAM;QAACA,MAAM,IAAID,OAAO,CAAC,IAAIJ,MAAM,CAACK,MAAM,CAAC,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACjG;MAAQ,SAAS,EAAC,qBAAqB;MAAC,OAAO,EAAE,MAAM;QAACA,MAAM,IAAID,OAAO,CAAC,IAAIH,MAAM,CAACI,MAAM,CAAC,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACjG;MAAQ,SAAS,EAAC,mBAAmB;MAAC,OAAO,EAAE,MAAM;QAACA,MAAM,IAAID,OAAO,CAAC,IAAIF,IAAI,CAACG,MAAM,CAAC,CAAC;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAE7F;MAAO,SAAS,EAAC,cAAc;MAAC,IAAI,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAE/C;MAAQ,SAAS,EAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAE,eACvC;MAAQ,SAAS,EAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAE,eACvC;MAAQ,SAAS,EAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAEnC;AACR,CAAC;AAAA,GAlBYF,OAAO;EAAA,QACAP,UAAU,EACbC,gBAAgB;AAAA;AAAA,KAFpBM,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}